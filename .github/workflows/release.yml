name: release

on:
  release:
    types: [published]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint Code

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          cache: "pip"

      - name: Update Pip
        run: python -m pip install --upgrade pip

      - name: Install Python Dependencies
        run: python -m pip install pyflakes

      - name: Lint with PyFlakes
        run: pyflakes src/

  test:
    runs-on: ubuntu-latest
    name: Test Code
    needs: lint

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          cache: "pip"

      - name: Update Pip
        run: python -m pip install --upgrade pip

      - name: Install Python Dependencies
        run: python -m pip install pyflakes

      - name: Run Unit Tests
        run: python -m unittest test

  build_wheel:
    runs-on: ubuntu-latest
    name: Build Python Package Wheel
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          cache: "pip"

      - name: Update Pip
        run: python -m pip install --upgrade pip

      - name: Install Python Dependencies
        run: python -m pip install build pyflakes setuptools

      - name: Build Wheel
        run: python -m build --wheel

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: omt-${{ matrix.os }}-${{ github.sha }}
          path: dist/*.whl

  build_docker:
    runs-on: ubuntu-latest
    name: Build Docker Image
    needs: build_wheel

    steps:
      - uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: omt-${{ matrix.os }}-${{ github.sha }}

      - name: Set up Docker
        uses: crazy-max/ghaction-setup-docker@v3

      - name: Set Up Docker-Compose
        uses: ndeloof/install-compose-action@v0.0.1

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Prepare Build Environment
        run: find . -iname '*.whl' -exec mv {} docker \;

      - name: Build Docker Image
        run: docker-compose --project-directory docker build

      - name: Tag Images
        if: ${{ github.ref_type == 'tag' }}
        run: |
          docker tag obs-media-triggers theivorobotnic/obs-media-triggers:latest && \
          docker tag obs-media-triggers theivorobotnic/obs-media-triggers:${{ github.ref_name }}

      - name: Push Images to DockerHub
        if: ${{ github.ref_type == 'tag' }}
        run: docker push --all-tags theivorobotnic/obs-media-triggers
